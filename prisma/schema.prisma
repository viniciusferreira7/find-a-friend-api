// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Pet_age {
  NEWBORN
  INFANT
  JUVENILE
  ADOLESCENT
  YOUNG
  ADULT
  MATURE
  SENIOR
  ELDERLY
  GERIATRIC
}

enum Pet_size {
  SMALL
  MEDIUM
  LARGE
  EXTRA_LARGE
}

enum Pet_energy_level {
  LOW
  MODERATE
  HIGH
  VERY_HIGH
}

enum Pet_independence_level {
  LOW
  MEDIUM
  HIGH
}

enum Pet_suitable_environment {
  AMPLE_SPACE
  SMALL_APARTMENT
  BACKYARD
  INDOOR
  OUTDOOR
  RURAL_ENVIRONMENT
  URBAN_ENVIRONMENT
}

model Pet {
  id                     String                   @id @default(uuid())
  name                   String                   @db.VarChar(100)
  description            String                   @db.VarChar(300)
  petAge                 Pet_age                  @default(NEWBORN) @map("pet_age")
  petImageUrl            String                   @map("pet_image_url")
  petSpecies             String                   @map("pet_species")
  petSize                Pet_size                 @default(SMALL) @map("pet_size")
  petEnergyLevel         Pet_energy_level         @default(LOW) @map("pet_energy_level")
  petSuitableEnvironment Pet_suitable_environment @default(AMPLE_SPACE) @map("pet_suitable_environment")
  petIndependenceLevel   Pet_independence_level   @default(MEDIUM) @map("pet_independence_level")

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @default(now()) @map("updated_at")
  petRequeriment PetRequeriment[]

  organization   Organization? @relation(fields: [organizationId], references: [id], onDelete: SetNull)
  organizationId String?       @map("organization_id")

  @@map("pets")
}

model PetRequeriment {
  id   String @id @default(cuid())
  name String @db.VarChar(400)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  pet   Pet    @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId String @map("pet_id")

  @@map("pet_requeriments")
}

model Organization {
  id           String @id @default(uuid())
  managerName  String @map("manager_name") @db.VarChar(100)
  email        String @unique
  passwordHash String @map("password_hash")
  cep          String @db.VarChar(8)
  street       String
  number       Int
  complement   String
  city         String
  state        String

  cellPhoneNumber String @map("cell_phone_number") @db.VarChar(15)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  pet       Pet[]

  @@map("organizations")
}
